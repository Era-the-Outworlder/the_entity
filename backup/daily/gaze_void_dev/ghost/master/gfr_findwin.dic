//----Open Program Commentary----
//----<3 Era 11/23/2021----
//Inspired by code by Zarla-s and Zichqec, with direct assistance from the latter in figuring out how to make this do what I wanted. 
//It's probably not nearly as neat as it could be, but it hasn't crashed my computer yet ;-)


	
OnDesktopEyeball 
{
	//The number of open windows will be stored in _num
	_num = FUNCTIONEX("window_info.dll")
	//A string containing the names of all open windows separated by commas will be stored in OpenWindows
	OpenWindows = valueex
	// _bat = FUNCTIONEX("window_info.dll","info","0x100AE0")
	 // owCap = valueex0 + valueex1 + valueex8
	--
	//addcap = FUNCTIONEX("findwin.dll","getcaption","Qt5QWindowIcon")
	//addcap2 = FUNCTIONEX("findwin.dll","getclass","Medibang Cloud Service")
	--
	
	
	if eraDebug == "ON"
	{
				//Displays open windows, for debug
				// _display = REPLACE("%(OpenWindows)",",","\n\n[half]")
				_display = REPLACE("%(owCap)",",","\n")
				"\_q\b2testing\n\n%(_display)\n\n"
	}
	else
	{
					
		//"-%(addcap)-%(addcap2)-\n"
		//--
		"\s[0]\_v[trill.wav](%(knownName) looks at your computer.)\n\n"
		--
		//calls commentary
		AppView
	}
	--
	"\e"
}

AppView : nonoverlap
{ 

	//fileExplorer;taskManager;myuTorrent;GitHub;
	//Discord;videoZoom;Twitch;
	// Firefox;
	Brave;
	// Chrome;Edge;
	//codeBlocks;VisualStudio;ghidraDecomp;Ghidra;resourceHacker;lSpiro;
	//plusNotepad;wordPad;notePad;Scrivener;
	// Paint;Sai1;Sai2;mediBang;fireAlpaca;Gimp;Blender;
	// iTunes;vlcMP;Winamp;winMedia;musicBee;Spotify;Audacity;flStudio;amazingMIDI;
	// Steam;steamChat;nutDealer;blueStacks;mcLauncher;mineCraft;originLaunch;eaLauncher;
}
		
		//Basic Template for adding additional programs to watchlist.
		//Doesn't work with some programs/window classes. very frustrating.		
		//Change "requestName" to something relevent and unique. Add to AppView list above, followed by semicolon ";"
		//Change "Program" in RE_ASEARCH() to a substring found within the window caploc. The more unique to that program, the better.
		//Change "WindowClass" to the window class of the desired program.
/* 		
requestName
{
	if RE_ASEARCH("Program",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Program",OpenWindows) 
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","WindowClass") == 1
		{
			"Program Open"
		}
		else
		{
			"Program Minimised"
		}
	}
}
*/


//--------Functions and FMS--------

fileExplorer
{
	if FUNCTIONEX("findwin.dll","find",,"CabinetWClass") == 1
	{
		caploc = FUNCTIONEX("findwin.dll","getcaption","CabinetWClass")
		
		if FUNCTIONEX("findwin.dll","count","%(caploc)","CabinetWClass") == 1
		{
			"%(caploc) Open in File Explorer"
			//"%(explorerOpen)"
		}
		else
		{
			"File Explorer Minimised"
			//"%(explorerMin)"
		}
	}
}

taskManager
{
	if RE_ASEARCH("Task Manager",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Task Manager",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","TaskManagerWindow") == 1
		{
			"Task Manager Open"
		}
		else
		{
			"Task manager minimised"
		}
	}
}

myuTorrent
{
	if RE_ASEARCH("Torrent",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Torrent",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","μTorrent4823DF041B09") == 1
		{
			"μTorrent Open"
		}
		else
		{
			"μTorrent minimised"
		}
	}
}
GitHub
{
	if RE_ASEARCH("GitHub",OpenWindows) != -1
	{
		caploc = RE_ASEARCH("GitHub",OpenWindows)
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Chrome_WidgetWin_1") == 1
		{
			"Doing a little programming? Interesting.\n"
		}
		else
		{
			"Don't forget to push your commits...\n"
		}
	}
}
		
//--------Comms--------
	
Discord
{
	if RE_ASEARCH("Discord",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Discord",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Chrome_WidgetWin_1") == 1
		{
			"%(discordOpen)"
		}
		else
		{
			"%(discordMin)"
		}
	}
}


videoZoom
{
	if RE_ASEARCH("Zoom",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Zoom",OpenWindows) 
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","ZPPTMainFrmWndClassEx") == 1
		{
			"Zoom Open"
		}
		else
		{
			"Zoom minimised"
		}
	}
}
	
//--------Video--------
	

	
Twitch
{
	if RE_ASEARCH("Twitch",OpenWindows) != -1
	{
		caploc = RE_ASEARCH("Twitch",OpenWindows)
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Chrome_WidgetWin_1") == 1
		{
			"Watching livestreams?\n"
		}
		else
		{
			"Sometimes it's enough to listen\n"
		}
	}
}	
	
//--------Browsers--------

Firefox
{
	if RE_ASEARCH("Firefox",OpenWindows) != -1 
	
	{
		caploc = RE_ASEARCH("Firefox",OpenWindows) 
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","MozillaWindowClass") == 1
		{
			"Firefox Open"
		}
		else
		{
			"Firefox minimised"
		}
	}
}

Brave
{
	if RE_ASEARCH("Brave",OpenWindows) != -1
	
	_barf = FUNCTIONEX("findwin.dll","getcaption","Chrome_WidgetWin_1")
	_baff = FUNCTIONEX("findwin.dll","getpid","%(_barf)","Chrome_WidgetWin_1")
	
	_bat = FUNCTIONEX("window_info.dll","info")
	_owCap = valueex0
	_owClass = valueex1
	_owClass2 = valueex2
	_owState = valueex8
	{
			"\_q\b2 %(_baff)\n\n %(_owCap)\n\n %(_owClass)\n\n %(_owClass2)\n\n %(_owState)\n\n"
		// caploc = RE_ASEARCH("Brave","%(_owCap[0])")
		// if caploc
		// {
		// }
		// else
		// {
			// "%(braveMin)"
			// "Hmmm... Maybe... not so Brave?\n(The entity chuckles.)"
		// }
		--
		_barf = ""
		_baff = ""
	
		_bat = ""
		_owCap = ""
		_owClass = ""
		_owState = ""
		"done."
	}
}
	
Chrome
{
	if RE_ASEARCH("Chrome",OpenWindows) != -1
	{
		caploc = RE_ASEARCH("Chrome",OpenWindows)
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Chrome_WidgetWin_1") == 1
		{
			"Chrome is open"
		}
		else
		{
			"Chrome is minimised\n"
		}
	}
}

Edge
{
	if RE_ASEARCH("Edge",OpenWindows) != -1
	{
		caploc = RE_ASEARCH("Edge",OpenWindows)
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Chrome_WidgetWin_1") == 1
		{
			"Edge is Open"
		}
		else
		{
			"Edge is minimised\n"
		}
	}
}

//--------Programming/IDEs--------

codeBlocks
{
	if RE_ASEARCH("Code::Blocks",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Code::Blocks",OpenWindows) 
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","wxWindowClassNR") == 1
		{
			"Code::Blocks Open"
		}
		else
		{
			"Code::Blocks minimised"
		}
	}
}

VisualStudio
{
	if RE_ASEARCH("Visual Studio",OpenWindows) != -1
	{
		caploc = RE_ASEARCH("Visual Studio",OpenWindows)
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Chrome_WidgetWin_1") == 1
		{
			"Doing a little programming?\n"
		}
		else
		{
			"Well, I guess everyone needs a break now and then...\nDon't forget to save your code.\n"
		}
	}
}

ghidraDecomp
{
	if RE_ASEARCH("Ghidra Decompiler",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Ghidra Decompiler",OpenWindows) 
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","CabinetWClass") == 1
		{
			"Ghidra Decompiler Open"
		}
		else
		{
			"Ghidra Decompiler minimised"
		}
	}
}

Ghidra
{
	if RE_ASEARCH("Ghidra",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Ghidra",OpenWindows) 
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","SunAwtFrame") == 1
		{
			"Ghidra Open"
		}
		else
		{
			"Ghidra minimised"
		}
	}
}

resourceHacker
{
	if RE_ASEARCH("Resource Hacker",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Resource Hacker",OpenWindows) 
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","TMainForm") == 1
		{
			"Resource Hacker Open"
		}
		else
		{
			"Resource Hacker minimised"
		}
	}
}

lSpiro
{
	if RE_ASEARCH("L. Spiro",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("L. Spiro",OpenWindows) 
		gameCheat = FUNCTIONEX("findwin.dll","getcaption","Calc")
		
		if RE_ASEARCH("DELTARUNE",gameCheat) != -1
		{
			"I see what you're doing, Lightner."
		}
		elseif RE_ASEARCH("UNDERTALE",gameCheat) != -1
		{
			"Amazing what you can do with a little DETERMINATION."
		}
		else	
		{
			if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Calc") == 1
			{
				"L. Spiro Memory Hacking Software Open"
			}
			else
			{
				"L. Spiro Memory Hacking Software minimised"
			}
		}
	}
}

	//----May or may not add these later----
	//JetBrains dotPeek = HwndWrapper[Entryway;;980bac01-d58b-4338-937b-781e88448d21]
	//JustAssembly = HwndWrapper[JustAssembly.exe;;a9118db2-7279-4330-9759-6b7f6a6a8e66]
	//JustDecompile = HwndWrapper[JustDecompile.exe;;d82b4661-9ce8-44fb-9271-f6577464c67f]
	//dnSpy = CabinetWClass
	//dnSpy = HwndWrapper[dnSpy;;568a6bc4-4766-4a87-a755-4e5c542a7b5a]
	
	
//--------Text Editors--------
	
plusNotepad
{
	if RE_ASEARCH("Notepad++",OpenWindows) != -1
	{
		caploc = RE_ASEARCH("Notepad++",OpenWindows)
		wincap = FUNCTIONEX("findwin.dll","getcaption","Notepad++")
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Notepad++") == 1		
		{			
			if "SSP" _in_ wincap
			{
				if "Gaze" _in_ wincap || "gaze" _in_ wincap
				{
					"No... What? I thought I-\n\n... "
				}
				else
				{
					"What... What is this?\n\n%(username)?  "
				}
			}
			else
			{
				"Notepad++ is open  %(wincap)"
			}
		}
		else
		{
			"Notepad++ is Minimised   %(wincap)"
		}
	}
}
	
wordPad
{
	if RE_ASEARCH("WordPad",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("WordPad",OpenWindows)
		wincap = FUNCTIONEX("findwin.dll","getcaption","WordPadClass")
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","WordPadClass") == 1
		{
			"WordPad Open- %(wincap)"
		}
		else
		{
			"WordPad minimised"
		}
	}
}
	
notePad
{
	if RE_ASEARCH("Notepad",OpenWindows) != -1 && FUNCTIONEX("findwin.dll","find",,"Notepad") != -1
	{
		caploc = RE_ASEARCH("Notepad",OpenWindows) 
		wincap = FUNCTIONEX("findwin.dll","getcaption","Notepad")
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Notepad") == 1
		{
			"Notepad Open- %(wincap)"
		}
	}
}
	
Scrivener
{
	if FUNCTIONEX("findwin.dll","find","","Qt5156QWindowIcon") == 1
	{
		caploc = RE_ASEARCH("Scrivener",OpenWindows) 
		wincap = FUNCTIONEX("findwin.dll","getcaption","Qt5156QWindowIcon")
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Qt5156QWindowIcon") == 1
		{
			"Scrivener Open- %(wincap)"
		}
		else
		{
			"Scrivener minimised"
		}
	}
}
	//QTranslate = #32770
	
	
//--------Image Editors	/ Modeling--------
	
Paint
{
	if FUNCTIONEX("findwin.dll","find","","MSPaintApp") == 1
	{
		caploc = RE_ASEARCH("Paint",OpenWindows) 
		wincap = FUNCTIONEX("findwin.dll","getcaption","MSPaintApp")
		
		if FUNCTIONEX("findwin.dll","count","%(wincap)","MSPaintApp") == 1
		{
			"Paint Open %(wincap)"
		}
		else
		{
			"Paint minimised %(wincap)"
		}
	}
}

//----SAI 2 untested, SAI 1 doesn't work at all----
Sai2
{
	if RE_ASEARCH("Sai2",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Sai2",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","sflRootWindow") == 1
		{
			"Sai2 Open"
		}
		else
		{
			"Sai2 minimised"
		}
	}
}


//----MediBang was terribly finicky to get working and I' not sure how well it does
mediBang
{
	
	if FUNCTIONEX("findwin.dll","find",,"Qt5QWindowIcon") == 1	
	{
		wincap = FUNCTIONEX("findwin.dll","getcaption","Qt5QWindowIcon")
		
		if "Medibang" _in_ wincap		
		{			
			if FUNCTIONEX("findwin.dll","count",,"Qt5QWindowIcon") >= 1
			{
				"Medibang Might Be Open??"
			}
			else
			{
				"Medibang is Minimised"
			}
		}
		
	}
}
//Place to start next time I go back to tackling this

fireAlpaca
{
	if RE_ASEARCH("FireAlpaca",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("FireAlpaca",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Qt5QWindowIcon") == 1
		{
			"FireAlpaca Open"
		}
		else
		{
			"FireAlpaca minimised"
		}
	}
}

Gimp
{
	if RE_ASEARCH("GNU Image",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("GNU Image",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","gdkWindowToplevel") == 1
		{
			"GIMP Open"
		}
		else
		{
			"GIMP minimised"
		}
	}
}

Blender
{
	if RE_ASEARCH("Blender",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Blender",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","GHOST_WindowClass") == 1
		{
			"Blender Open"
		}
		else
		{
			"Blender minimised"
		}
	}
}
	
//--------Music--------

//----Sorry, I'm not downloading iTunes just to test this
iTunes
{
	if RE_ASEARCH("iTunes",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("iTunes",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","iTunes") == 1
		{
			"iTunes Open"
		}
		else
		{
			"iTunes minimised"
		}
	}
}

vlcMP
{
	if RE_ASEARCH("VLC",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("VLC",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","wxWindowClassNR") == 1
		{
			"VLC Media Player Open"
		}
		else
		{
			"VLC Media Player minimised"
		}
	}
}

Winamp
{
	if RE_ASEARCH("Winamp",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Winamp",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Winamp v1.x") == 1
		{
			"Winamp Open"
		}
		else
		{
			"Winamp minimised"
		}
	}
}

winMedia
{
	if RE_ASEARCH("Windows Media Player",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Windows Media Player",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","WMPlayerApp") == 1
		{
			"Windows Media Player Open"
		}
		else
		{
			"Windows Media Player minimised"
		}
	}
}

musicBee
{
	if RE_ASEARCH("MusicBee",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("MusicBee",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","WindowsForms10.Window.8.app.0.2bf8098_r7_ad1") == 1
		{
			"MusicBee Open"
		}
		else
		{
			"MusicBee minimised"
		}
	}
}

Spotify
{
	if RE_ASEARCH("Spotify",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Spotify",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Chrome_WidgetWin_0") == 1
		{
			"Spotify Open"
		}
		else
		{
			"Spotify minimised"
		}
	}
}
	
Audacity
{
	if RE_ASEARCH("Audacity",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Audacity",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","wxWindowNR") == 1
		{
			"Audacity Open"
		}
		else
		{
			"Audacity minimised"
		}
	}
}

flStudio
{
	if RE_ASEARCH("FL Studio",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("FL Studio",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","TFruityLoopsMainForm") == 1
		{
			"FL Studio Open"
		}
		else
		{
			"FL Studio minimised"
		}
	}
}

amazingMIDI
{
	if RE_ASEARCH("AmazingMIDI",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("AmazingMIDI",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Afx:400000:b10003:6:c11831") == 1
		{
			"AmazingMIDI Open"
		}
		else
		{
			"AmazingMIDI minimised"
		}
	}
}
	

	
	//----Games & Emulators----
	
Steam
{
	if RE_ASEARCH("Steam",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Steam",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","vguiPopupWindow") == 1
		{
			"Steam Open"
		}
		else
		{
			"Steam minimised"
		}
	}
}

steamChat
{
	if RE_ASEARCH("Steam Chat",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Steam Chat",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","SDL_app") == 1
		{
			"Steam Chat Open"
		}
		else
		{
			"Steam Chat minimised"
		}
	}
}
	//Undertale/Deltarune
nutDealer
{
	if RE_ASEARCH("Undertale",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Undertale",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","YYGameMakerYY") == 1
		{
			"Undertale Open"
		}
		else
		{
			"Undertale minimised"
		}
	}
	elseif RE_ASEARCH("Deltarune",OpenWindows) != -1
	{
		caploc = RE_ASEARCH("Deltarune",OpenWindows) 
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","YYGameMakerYY") == 1
		{
			"Deltarune Open"
		}
		else
		{
			"Deltarune minimised"
		}
	}
}

blueStacks
{
	if RE_ASEARCH("Bluestacks",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Bluestacks",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Qt5154QWindowIcon") == 1
		{
			"Bluestacks Android Emulator Open"
		}
		else
		{
			"Bluestacks Android Emulator minimised"
		}
	}
}

mcLauncher
{
	if RE_ASEARCH("Minecraft Launcher",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Minecraft Launcher",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","MCLWindow") == 1
		{
			"Minecraft Launcher Open"
		}
		else
		{
			"Minecraft Launcher minimised"
		}
	}
}

mineCraft
{
	if RE_ASEARCH("Minecraft",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Minecraft",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","GLFW30") == 1
		{
			"Minecraft Open"
		}
		else
		{
			"Minecraft minimised"
		}
	}
}

originLaunch
{
	if RE_ASEARCH("Origin",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("Origin",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Qt5QWindowIcon") == 1
		{
			"Origin Open"
		}
		else
		{
			"Origin minimised"
		}
	}
}

eaLauncher
{
	if RE_ASEARCH("EA",OpenWindows) != -1 
	{
		caploc = RE_ASEARCH("EA",OpenWindows) 
		
		if FUNCTIONEX("findwin.dll","count","%(OpenWindows[caploc])","Qt5152QWindowOwnDCIcon") == 1
		{
			"EA Open"
		}
		else
		{
			"EA minimised"
		}
	}
}

//----Envelopes for multi-option or mode-dependent responses


randomEquation
{
 "a\f[sup,true]2\f[sup,false]+b\f[sup,true]2\f[sup,false]=c\f[sup,true]2\f[sup,false]"
 "V–E+F=2"
 "idk maths"
 "2+2=5"
}
	
discordOpen
{
	"An interesting method for maintaining a social life..."
}

discordMin
{
	"Hmmm... Can't see what anyone is saying like this."
}

braveOpen
{
	"Browsing the web, are we?"
}

braveMin
{
	"(%(knownName) looks at your browser on the taskbar.)\nAlways good to take a break from things"
}